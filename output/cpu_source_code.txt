GAS LISTING cpu_main_vers2.s 			page 1


   1              	   .section .data
   2              	#==========================================================
   3              	#
   4              	#   Simulator Memory, 16bit address, 64K max
   5              	#
   6              	#==========================================================
   7              	smem:
   8              	    .rept 65536/2
   9              	    .byte 0x04,0x40
  10 0000 04400440 	    .endr
  10      04400440 
  10      04400440 
  10      04400440 
  10      04400440 
  11              	#==========================================================
  12              	#
  13              	#   Simulator registers, 16 32-bit registers
  14              	#   Initialized to zero on "boot"
  15              	#
  16              	#==========================================================
  17              	regs:
  18 10000 01000000 	    .long 1
  19              	    .rept 15
  20              	    .long 0
  21 10004 00000000 	    .endr
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              	#==========================================================
  23              	#
  24              	#   Operation dispatch table, one/op-code, 256 max
  25              	#
  26              	#   Rd=Destination Register (0-15)
  27              	#   Rs=Source Register (0-15)
  28              	#   Memory has a 16-bit address space, high-order
  29              	#   bits of any indirect operation discarded
  30              	#
  31              	#==========================================================
  32              	optbl:
  33 10040 43000000 	    .long   snop        #00 Robot init
  34 10044 43000000 	    .long   snop        #01 Read Sensors
  35 10048 43000000 	    .long   snop        #02 Robot Speed, Rr,Rl
  36 1004c 43000000 	    .long   snop        #03 Robot Speed Imm
  37 10050 1D000000 	    .long   ldr     #04 ld Rd,Rs
  38              	    .rept 256-((.-optbl)/4)
  39              	    .long   snop
  40 10054 43000000 	    .endr
  40      43000000 
  40      43000000 
  40      43000000 
  40      43000000 
  41              	#==========================================================
  42              	#
  43              	#   Misc. data follows
  44              	#
  45              	#==========================================================
GAS LISTING cpu_main_vers2.s 			page 2


  46              	# Control String for op-codes not yet implemented
  47 10440 4E6F7420 	nostr: .string "Not Implemented: %d\n"
  47      496D706C 
  47      656D656E 
  47      7465643A 
  47      2025640A 
  48              	# Temporary storage for simulated IP
  49 10455 00000000 	ipsv:    .long    0
  50              	#**********************************************************
  51              	#
  52              	#   Simulator CPU: Fetch, Decode, Execute
  53              	#
  54              	#**********************************************************
  55              	    .globl _start
  56              	    .section .text
  57              	_start:
  58 0000 BF000000 	    movl     $0,%edi         #Our simulated ip
  58      00
  59              	fetch:
  60 0005 8A043D00 	    movb     smem(,%edi,1),%al   #Fetch opcode
  60      000000
  61 000c 25FF0000 	    andl     $0xff,%eax      #Clear high-order bytes
  61      00
  62 0011 8B048540 	    movl     optbl(,%eax,4),%eax #Decode: get address of routine
  62      000100
  63 0018 47       	    incl     %edi            #Bump ip to second instruction byte
  64 0019 FFD0     	    call     *%eax           #Execute the instruction
  65              	                     #Instructions must leave ip
  66              	                     #pointing to next opcode
  67 001b EBE8     	    jmp fetch            #It's a cpu, do forever!
  68              	#===================================================================
  69              	#
  70              	#          Instruction Execution Routines
  71              	#
  72              	#===================================================================
  73              	#-------------------------------------------------------------------
  74              	#
  75              	#          ldr -- ld Rd,Rs Move 32 bits from source-dest register
  76              	#
  77              	#-------------------------------------------------------------------
  78              	ldr:
  79 001d 8A043D00 	     movb     smem(,%edi,1),%al   #Get Rd,Rs in temp reg
  79      000000
  80 0024 25FF0000 	     andl     $0xff,%eax      #Clear high bits
  80      00
  81 0029 89C3     	     movl     %eax,%ebx       #Make copy for source
  82 002b C1F804   	     sarl     $4,%eax         #Isolate Rd index in %eax
  83 002e 83E30F   	     andl     $0x0f,%ebx      #Isolate Rs index in %ebx
  84 0031 8B1C9D00 	     movl     regs(,%ebx,4),%ebx #Get data from Rs
  84      000100
  85 0038 891C8500 	     movl     %ebx,regs(,%eax,4) #Store into Rd
  85      000100
  86 003f 83C701   	     addl     $1,%edi         #Adjust Instruction Pointer
  87 0042 C3       	     ret              #Return to fetch
  88              	#------------------------------------------------------------------
  89              	#
  90              	#   snop -- Simulator No Operation
GAS LISTING cpu_main_vers2.s 			page 3


  91              	#
  92              	#------------------------------------------------------------------
  93              	snop:
  94 0043 6A00     	     pushl    $0 #Print its own op-code
  95 0045 EB04     	     jmp notimp
  96              	rinit:        #Robot init
  97              	rsens:        #Read Sensors
  98              	rspeed:       #Robot Speed
  99 0047 6A01     	     pushl    $1
 100 0049 EB00     	     jmp notimp
 101              	#------------------------------------------------------------------
 102              	#
 103              	#   Notimp: Default operation for operations not implemented
 104              	#   Should never happen in actual program, represents an
 105              	#   error. Treat as no-op for now.
 106              	#
 107              	#------------------------------------------------------------------
 108              	notimp:
 109 004b 893D5504 	     movl     %edi,ipsv #In case printf changes ip
 109      0100
 110 0051 68400401 	     push     $nostr     #Pointer to control string
 110      00
 111 0056 E8FCFFFF 	call printf
 111      FF
 112 005b 83C408   	addl $8,%esp
 113 005e 8B3D5504 	movl ipsv,%edi #Restore simulator ip
 113      0100
 114 0064 83C701   	addl $1,%edi   #Bump ip to next op code
 115 0067 C3       	ret
 116              	
GAS LISTING cpu_main_vers2.s 			page 4


DEFINED SYMBOLS
    cpu_main_vers2.s:7      .data:0000000000000000 smem
    cpu_main_vers2.s:17     .data:0000000000010000 regs
    cpu_main_vers2.s:32     .data:0000000000010040 optbl
    cpu_main_vers2.s:93     .text:0000000000000043 snop
    cpu_main_vers2.s:78     .text:000000000000001d ldr
    cpu_main_vers2.s:47     .data:0000000000010440 nostr
    cpu_main_vers2.s:49     .data:0000000000010455 ipsv
    cpu_main_vers2.s:57     .text:0000000000000000 _start
    cpu_main_vers2.s:59     .text:0000000000000005 fetch
    cpu_main_vers2.s:108    .text:000000000000004b notimp
    cpu_main_vers2.s:96     .text:0000000000000047 rinit
    cpu_main_vers2.s:97     .text:0000000000000047 rsens
    cpu_main_vers2.s:98     .text:0000000000000047 rspeed

UNDEFINED SYMBOLS
printf
